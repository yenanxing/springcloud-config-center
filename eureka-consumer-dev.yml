eureka:
  client:
    #是否将自己注册到Eureka Server,默认为true，由于当前就是server，故而设置成false，表明该服务不会向eureka注册自己的信息
    #register-with-eureka: false
    #是否从eureka server获取注册信息，由于单节点，不需要同步其他节点数据，用false
    #fetch-registry: false
    #设置服务注册中心的URL，用于client和server端交流
    service-url:
      defaultZone: http://nance:123456@euk1.com:7001/eureka/

server:
  port: 8080

# 应用名称，用于区分Eureka注册的服务
spring:
  application:
    name: eureka-consumer
  boot:
    admin:
      client:
        url: http://localhost:7010

# 配置ribbon的负载策略
# 注意eureka-provider是服务提供方应用名称，一定要写对
#eureka-provider:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule

ribbon:
  # 连接超时时间(ms)
  ConnectTimeout: 1000
  # 业务逻辑超时时间(ms)
  ReadTimeout: 1000
  # 同一台实例最大重试次数,不包括首次调用
  MaxAutoRetries: 3
  # 重试负载均衡其他的实例最大重试次数,不包括首次调用
  MaxAutoRetriesNextServer: 0
  # 是否所有操作都重试
  OkToRetryOnAllOperations: false

feign:
  hystrix:
    enabled: true
    command:
      default:
        execution:
          isolation:
            strategy: SEMAPHORE

# 开启所有端点
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always